connect

batch

# Start by creating the JDBC datasource
/subsystem=datasources/jdbc-driver=mariadb-java-client:add(driver-module-name=org.mariadb.jdbc,driver-xa-datasource-class-name=org.mariadb.jdbc.MySQLDataSource,driver-name=mariadb-java-client)
/subsystem=datasources/data-source=usersDS:add(connection-url="jdbc:mysql://localhost:33061/erip", jndi-name="java:/env/jdbc/usersDS", driver-name=mariadb-java-client, user-name="root", password="123456")

/subsystem=elytron/jdbc-realm=ais-jdbc-realm:add(principal-query=[{sql="SELECT u.passwd_sha, r.name FROM erip.user u INNER JOIN erip.user_role utr ON u.id = utr.user_id INNER JOIN erip.role r ON utr.role_id = r.id WHERE u.login=? AND u.valid", data-source="usersDS", simple-digest-mapper={algorithm=simple-digest-sha-1,hash-encoding=hex,password-index=1},attribute-mapping=[{index=2, to=roles}]}])
 
/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=roles)

 
/subsystem=elytron/security-domain=ais-security-domain:add(realms=[{realm=ais-jdbc-realm,role-decoder=from-roles-attribute}],default-realm=ais-jdbc-realm,permission-mapper=default-permission-mapper)

/subsystem=elytron/http-authentication-factory=ais-http-auth-factory:add(http-server-mechanism-factory=global,security-domain=ais-security-domain,mechanism-configurations=[{mechanism-name=FORM,mechanism-realm-configurations=[{realm-name=RealmUsersRoles}]}])
 
/subsystem=undertow/application-security-domain=aisHttpSecurityDomain:add(http-authentication-factory=ais-http-auth-factory)

/subsystem=ejb3/application-security-domain=aisHttpSecurityDomain:add(security-domain=ais-security-domain)

#Turn on verbose debug:
/subsystem=logging/logger=com.arjuna:write-attribute(name=level,value=DEBUG)
/subsystem=logging/logger=io.jaegertracing.Configuration:write-attribute(name=level,value=DEBUG)
/subsystem=logging/logger=sun.rmi:write-attribute(name=level,value=DEBUG)
/subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=DEBUG)

run-batch

reload